{"version":3,"sources":["components/Loader/Loader.jsx","components/Error/Error.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","API/API.jsx","components/SearchBar/SearchBar.jsx","components/Button/Button.jsx","components/App.js","index.js"],"names":["Spiner","style","display","margin","width","type","color","height","Component","Error","props","error","Modal","handleKeyDown","e","code","onClose","window","addEventListener","this","removeEventListener","src","className","onClick","alt","ImageGalleryItem","state","showModal","toggle","setState","prevState","srcImg","largeImg","ImageGallery","images","map","id","webformatURL","largeImageURL","srcQuery","page","key","url","fetch","then","res","json","hits","SearchBar","inputValue","change","event","target","value","submit","preventDefault","onSubmit","autoComplete","autoFocus","onChange","placeholder","Button","click","App","err","loading","searchQuery","fetchImages","api","catch","finally","setTimeout","scrollTo","top","document","documentElement","scrollHeight","behavior","searchForSubmit","query","prevProps","message","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88e20ed1.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nclass Spiner extends Component {\n  render() {\n    return (\n      <>\n        <Loader\n          style={{\n            display: 'block',\n            margin: '0 auto',\n            width: 'fit-content'\n          }}\n          type=\"ThreeDots\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n        />\n      </>\n      \n    )\n  }\n}\n\nexport default Spiner","import React from \"react\";\n\nlet Error = props => {\n  \n  let {error} = props\n  return (\n    <div>\n      <h3>{error}</h3>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, {Component} from 'react'\n\nclass Modal extends Component {\n  \n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n  \n  handleKeyDown = (e) => e.code === \"Escape\" && this.props.onClose()\n  \n  render() {\n    let {src, onClose} = this.props\n    return (\n      <div className=\"Overlay\" onClick={onClose}>\n        <div className=\"Modal\">\n          <img src={src} alt=\"\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Modal","import React, {Component} from 'react'\nimport Modal from '../../Modal'\n\nclass ImageGalleryItem extends Component {\n  \n  state = {\n    showModal: false,\n  };\n  \n  toggle = () => this.setState(prevState => ({showModal: !prevState.showModal}))\n  \n  \n  render() {\n    let {srcImg, largeImg} = this.props\n    return (\n      <>\n        <li className=\"ImageGalleryItem\">\n          <img\n            src={srcImg}\n            alt=\"\"\n            className=\"ImageGalleryItem-image\"\n            onClick={this.toggle}\n          />\n        </li>\n        {this.state.showModal && <Modal src={largeImg} onClose={this.toggle}/>}\n      </>\n    )\n  }\n}\n\nexport default ImageGalleryItem","import React from \"react\";\nimport ImageGalleryItem from './ImageGalleryItem'\n\nlet ImageGallery = props => {\n  \n  let {images} = props\n  \n  return (\n    <ul className={`ImageGallery`}>\n      {images.map(({id, webformatURL, largeImageURL}) =>\n        <ImageGalleryItem\n          key={id}\n          srcImg={webformatURL}\n          largeImg={largeImageURL}\n        />,\n      )}\n    </ul>\n  )\n};\n\nexport default ImageGallery;\n","let API = (srcQuery, page = 1) =>{\n  const key = '21111393-6001b1f3c039d334af6d283f7'\n  const url = `https://pixabay.com/api/?q=${srcQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=10`\n  \n  return fetch(url).then(res => res.json()).then(res => res.hits)\n}\n\n\nexport default {\n  API\n}\n","import React, {Component} from 'react'\n\nclass SearchBar extends Component {\n\n  state = {\n    inputValue: ''\n  }\n  \n  change = event => this.setState({ inputValue: event.target.value})\n  \n  submit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.inputValue)\n    this.setState({ inputValue: ''})\n  }\n  \n  render() {\n    return (\n      <>\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={this.submit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              value={this.state.inputValue}\n              onChange={this.change}\n              placeholder=\"Search images and photos\"\n            />\n          </form>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default SearchBar","import React from \"react\";\n\nlet Button = props => {\n  return (\n    <>\n      <button className={`Button`} type=\"button\" onClick={props.click}>\n        Load more\n      </button>\n    </>\n  );\n};\n\nexport default Button;\n","import React, {Component} from 'react'\nimport Spiner from './Loader'\nimport Error from './Error'\nimport ImageGallery from './ImageGallery'\nimport api from '../API/API'\nimport SearchBar from './SearchBar'\nimport Button from './Button'\n\nclass App extends Component {\n  \n  state = {\n    images: [],\n    err: false,\n    loading: false,\n    searchQuery: '',\n    page: 1\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    let prevQuery = prevState.searchQuery;\n    let nextQuery = this.state.searchQuery;\n    prevQuery !== nextQuery && this.fetchImages()\n  }\n  \n  fetchImages = () => {\n  \n    let { searchQuery, page } = this.state;\n    \n    this.setState({ loading: true });\n    \n    api.API(searchQuery, page)\n      .then(images => {\n        this.setState(prevState => {\n          return {\n            images: [...prevState.images, ...images],\n            page: prevState.page + 1\n          }\n        })\n      })\n      .catch(err => this.setState({ err }))\n      .finally(() => this.setState({loading: false}))\n  \n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth'\n      });\n    }, 1000)\n  }\n  \n  searchForSubmit = (query) => {\n    this.setState({\n      searchQuery: query,\n      images: []\n    })\n  }\n  render() {\n    \n    let {images, err, loading} = this.state\n    \n    return (\n      <div>\n        <SearchBar onSubmit={this.searchForSubmit}/>\n        <ImageGallery images={images}/>\n        {loading && <Spiner message={'Loading!!!'}/>}\n        {images.length > 0 && <Button click={this.fetchImages}/>}\n        {err && <Error error={`Something went wrong: ${err.message}`}/>}\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}